name: Demo Push

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "development" ]
    
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  
jobs:
  build:
    name: build
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Get version
        run: |
          echo "patch_version=`expr ${{ github.run_number }} % 10`" >> "$GITHUB_ENV"
          echo "minor_version=`expr ${{ github.run_number }} / 10`" >> "$GITHUB_ENV"
      - name: Use the value
        id: step_two
        run: |
          printf '%s\n' "$patch_version"
          printf '%s\n' "$minor_version"

      - name: Build image
        run: docker build .

      - run: echo This event is a pull request.
        if: ${{ github.event_name == 'pull_request' }}
      - run: echo This event is a push.
        if: ${{ github.event_name == 'push' }}
  
  publish:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' }}
    permissions:
      contents: write
      packages: write
    
    steps:
    
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Login to GitHub Packages
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        
    -  name: Set up Docker Buildx
       uses: docker/setup-buildx-action@v3
       
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        # target: local
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.run_number }}
        labels: ${{ steps.meta.outputs.labels }}
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v0.${{ github.run_number/10 }}.${{ github.run_number%10 }}
        release_name: Release v0.0.${{ github.run_number }}
        draft: false
        prerelease: false
